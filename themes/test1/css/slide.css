/* You can alter this CSS in order to give Smooth Div Scroll your own look'n'feel */

#makeMeScrollable
{
	width: 1300px;
	margin-left:-200px;
	height: 330px;
	position: relative;
}

/* Replace the last selector for the type of element you have in
your scroller. If you have div's use #makeMeScrollable div.scrollableArea div,
if you have links use #makeMeScrollable div.scrollableArea a and so on. */
#makeMeScrollable div.scrollableArea img
{
	position: relative;
	float: left;
	margin: 0;
	padding: 0;
	/* If you don't want the images in the scroller to be selectable, try the following
	block of code. It's just a nice feature that prevent the images from
	accidentally becoming selected/inverted when the user interacts with the scroller. */
	-webkit-user-select: none;
	-khtml-user-select: none;
	-moz-user-select: none;
	-o-user-select: none;
	user-select: none;
}

img.scrollingHotSpotLeft
{
	/* The hotspots have a minimum width of 100 pixels and if there is room the will grow
    and occupy 15% of the scrollable area (30% combined). Adjust it to your own taste. */
	background: rgba(255,255,255,0.6);
	transition: all 0.5s ease;
	width: 29px;
	height: 58px;
	top: 100px;
	/* There is a big background image and it's used to solve some problems I experienced
    in Internet Explorer 6. */
	display: block;
	position: absolute;
	z-index: 200;
	left: 452px;
	/*  The first url is for Firefox and other browsers, the second is for Internet Explorer */
	
}

img.scrollingHotSpotRight
{
	background: rgba(255,255,255,0.6);
	transition: all 0.5s ease;
	top: 100px;
	width: 29px;
	height: 58px;
	display: block;
	position: absolute;
	z-index: 200;
	left: 875px;
}

img.scrollingHotSpotRight:hover, img.scrollingHotSpotLeft:hover
{
	background: rgba(255,255,255,0.9);
}

/* The scroll wrapper is always the same width and height as the containing element (div).
   Overflow is hidden because you don't want to show all of the scrollable area.
*/
div.scrollWrapper
{
	position: relative;
	overflow: hidden;
	width: 100%;
	height: 100%;
}

div.scrollableArea
{
	position: relative;
	width: auto;
	height: 100%;
}